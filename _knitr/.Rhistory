data <- read.csv(gel_agar.csv)
data <- read.csv("gel_agar.csv")
head(data)
### this function will take a data frame and return a data frame with the mean, standard deviation, and standard error
### calculated for all the NUMERIC columns split by all the FACTOR columns
### I would first recommend running:
# colwise(class)(dataframe)
### to determine the class of each column.
### If you have columns of class integer that you would like as factors, the function will automatically change this. If
### you have integers that you want calculations on, change their class to numeric.
### Convert anything not labeled as a factor or as numeric to the class of your choice:
# data$column_name<-as.numeric(data$column_name)
### or
# data$column_name<-as.factor(data$column_name)
### or you can use the column indicies to do the same thing. For example, if the variable in the first column needs to be converted to a factor:
# data[,1]<-as.numeric(data$column_name)
### Once you have the class of everything as you wish, run the summarydata function code.
### When you want to run it on your data, run this and supply additional arguments
### The base is this: sum_df <- summarydata(df)
### It will split over ALL FACTOR VARIABLES and calculate mean, standard deviation, and standard error for all numeric (or integer) variables
### To split over only some factors:
# sum_df <- summarydata(df, splittingfactors=c("v1","v2", etc.)) where v1 and v2 are your variables of choice
### It will not automatically convert integer columns to factors, but you can do this. An integer will remain an integer and be calculated as a numeric variable
### To convert these:
# sum_df <- summarydata(df, convert_integers=T)
### mean, SD, and SE are all automatically calculated. To only calculate some, change the logical arguments of calc_mean, calc_sd, and calc_se
### to only get mean and se:
# sum_df <- summarudata(df,calc_sd=F)
require(plyr)
summarydata <- function (df,splittingfactors=NULL, convert_integers=F, calc_mean=T, calc_sd=T, calc_se=T){
if((convert_integers)){
for (i in 1:length(df)) if (is.integer(df[,i]))(df[,i]<-as.factor(df[,i]))
}
#this section gets an index of factors and numeric variables to use later
v.numeric <- (rep(0,length(df)))
v.factor <- (rep(0,length(df)))
for (i in 1:length(df)) if (is.factor(df[,i])) (v.factor[i]<-as.vector((names(df[i]))))
for (i in 1:length(df)) if (is.numeric(df[,i])) (v.numeric[i]<-as.vector((names(df[i]))))
v.factor<-v.factor[!v.factor==0]
v.numeric<-v.numeric[!v.numeric==0]
if(!is.null(splittingfactors)){
v.factor <- as.vector(c(splittingfactors))
}
# each of these three if loops calculate mean, sd, and se for each column (numcolwise) and then combines into a results df
if(calc_mean){
mean.res <- ddply(df, c(v.factor), numcolwise(mean, na.rm=TRUE))
mean.names <- (rep(0,length(v.numeric)))
for (i in 1:length(v.numeric)) (mean.names[i]<-as.vector(paste(v.numeric[i],"mean",sep=".")))
column.names <- c(v.factor,mean.names)
colnames(mean.res) <- column.names
}
if(calc_sd){
sd.res <- ddply(df, c(v.factor), numcolwise(sd, na.rm=TRUE))
sd.names <- (rep(0,length(v.numeric)))
for (i in 1:length(v.numeric)) (sd.names[i]<-as.vector(paste(v.numeric[i],"sd",sep=".")))
column.names <- c(v.factor,sd.names)
colnames(sd.res) <- column.names
ifelse(calc_mean,ifelse(calc_sd,mean.sd.res <- merge(mean.res,sd.res), mean.sd.res<-mean.res),mean.sd.res<-sd.res)
}
if(calc_se){
se <- function(x) sqrt(var(x,na.rm=TRUE)/length(na.omit(x)))
se.res <- ddply(df, c(v.factor), numcolwise(se))
se.names <- (rep(0,length(v.numeric)))
for (i in 1:length(v.numeric)) (se.names[i]<-as.vector(paste(v.numeric[i],"se",sep=".")))
column.names <- c(v.factor,se.names)
colnames(se.res) <- column.names
}
ifelse(calc_mean, ifelse(calc_sd, ifelse(calc_se, results <- merge(mean.sd.res,se.res), results <- merge(mean.res, se.res)), ifelse(calc_se, results<- merge(mean.res,se.res), results <- mean.res)), ifelse(calc_sd, ifelse(calc_se, results <- merge(sd.res,se.res), results <- sd.res), results <- se.res))
return(results)
}
head(data)
sum <- summarydata(data, splittingfactors=c("AL.P","Agar","MES"))
sum
colwise(class)(data)
data2 <- data[,c(1,2,3,5,9)]
data2$Rep <- as.factor(data2$Rep)
sum <- summarydata(data2, splittingfactors=c("AL.P","Agar","MES"))
View(sum)
data <- read.csv("gel_agar.csv")
data$Rep <- as.factor(data$Rep)
data2 <- data[,c(1,2,3,5,9)]
sum <- summarydata(data2, splittingfactors=c("AL.P","Agar","MES"))
View(sum)
data <- read.csv("gel_agar.csv")
data$Rep <- as.factor(data$Rep)
data2 <- data[,c(1,2,3,5,9)]
sum <- summarydata(data2, splittingfactors=c("AL.P","Agar","MES"))
View(sum)
?bioMart
install.packages("knitr")
source("http://bioconductor.org/biocLite.R")
biocLite()
install.packages("packrat")
library(packrat)
library(ggplot2)
mt.cars
mtcars
mtcars2 <- data.frame(model = row.names(mtcars), mpg = mtcars$mpg, cyl = mtcars$cyl)
mtcars2
ggplot(mtcars2, aes(x = reorder(model, mpg), y = mpg, fill = cyl)) +
coord_flip() +
facet_grid(. ~ cyl) +
geom_bar(stat = "identity", position = position_dodge())
ggplot(mtcars2, aes(x = reorder(model, mpg), y = mpg, fill = cyl)) +
coord_flip() +
facet_grid(. ~ cyl) +
geom_text(aes(label = "Interesting Feature", x = "Pontiac Firebird", y = 30)) +
geom_bar(stat = "identity", position = position_dodge())
ggplot(mtcars2, aes(x = reorder(model, mpg), y = mpg, fill = cyl)) +
coord_flip() +
facet_grid(. ~ cyl) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = "Interesting Feature", x = "Pontiac Firebird", y = 30))
ggplot(mtcars2) +
coord_flip() +
geom_bar(aes(x = reorder(model, mpg), y = mpg, fill = cyl), stat = "identity", position = position_dodge()) +
geom_text(aes(label = "Interesting Feature", x = "Pontiac Firebird", y = 30))+
facet_grid(. ~ cyl)
ggplot(mtcars2, aes(x = reorder(model, mpg), y = mpg, fill = cyl)) +
coord_flip() +
geom_bar(stat = "identity", position = position_dodge()) +
facet_grid(. ~ cyl) +
geom_text(aes(label = "Interesting Feature", x = "Pontiac Firebird", y = 30))+
ggplot(mtcars2, aes(x = reorder(model, mpg), y = mpg, fill = cyl)) +
coord_flip() +
geom_bar(stat = "identity", position = position_dodge()) +
facet_grid(. ~ cyl) +
geom_text(aes(label = "Interesting Feature", x = "Pontiac Firebird", y = 30))
ann_text <- data.frame(mpg = 15,wt = 5,lab = "Text",
cyl = factor(8,levels = c("4","6","8")))
ann_text
p + geom_text(data = ann_text,label = "Text")
p <- ggplot(mtcars, aes(mpg, wt)) + geom_point()
p <- p + facet_grid(. ~ cyl)
p <- p + annotate("text", label = "Test", size = 4, x = 15, y = 5)
p + geom_text(data = ann_text,label = "Text")
ann_text <- data.frame(mpg = 15,wt = 5,lab = "Text",
cyl = factor(8,levels = c("4","6","8")))
p <- ggplot(mtcars, aes(mpg, wt)) + geom_point()
p <- p + facet_grid(. ~ cyl)
p + geom_text(data = ann_text,label = "Text")
ggplot(mtcars2, aes(x = reorder(model, mpg), y = mpg, fill = cyl)) +
coord_flip() +
geom_bar(stat = "identity", position = position_dodge()) +
facet_grid(. ~ cyl) +
geom_text(aes(label = "Interesting Feature", x = "Pontiac Firebird", y = 30))
head(mtcars2)
pflabel <- data.frame(model = "Pontiac Firebird", mpg = 30, cyl = factor(4, levels = c("4", "6", "8")), lab = "Interesting Feature")
p + geom_text(data = pflabel, label = "Interesting Feature")
mtcars2
mtcars2
p + geom_text(data = pflabel)
p <- ggplot(mtcars2, aes(x = reorder(model, mpg), y = mpg, fill = cyl)) +
coord_flip() +
geom_bar(stat = "identity", position = position_dodge()) +
facet_grid(. ~ cyl)
p + geom_text(data = pflabel)
p + geom_text(data = pflabel, label = "Interesting Feature")
View(pflabel)
View(mtcars2)
pflabel <- data.frame(model = "Pontiac Firebird", mpg = "30.0", cyl = factor(4, levels = c("4", "6", "8")),)
pflabel <- data.frame(model = "Pontiac Firebird", mpg = 30.0, cyl = factor(4, levels = c("4", "6", "8")),)
pflabel <- data.frame(model = "Pontiac Firebird", mpg = 30.0, cyl = factor(4, levels = c("4", "6", "8")))
p <- ggplot(mtcars2, aes(x = reorder(model, mpg), y = mpg, fill = cyl)) +
coord_flip() +
geom_bar(stat = "identity", position = position_dodge()) +
facet_grid(. ~ cyl)
p + geom_text(data = pflabel, label = "Interesting Feature")
p + geom_text(data = pflabel)
summary(mtcars2)
summary(pflabel)
pflabel <- data.frame(model = "Pontiac Firebird", mpg = 30.0, cyl = 4)
p <- ggplot(mtcars2, aes(x = reorder(model, mpg), y = mpg, fill = cyl)) +
coord_flip() +
geom_bar(stat = "identity", position = position_dodge()) +
facet_grid(. ~ cyl)
p + geom_text(data = pflabel)
p <- ggplot(mtcars2, aes(x = reorder(model, mpg), y = mpg, fill = cyl)) +
coord_flip() +
geom_bar(stat = "identity", position = position_dodge()) +
facet_grid(. ~ cyl)
p + geom_text(data = pflabel, label = "Interesting Feature")
p + geom_text(data = pflabel, label = "Interesting \nFeature")
pflabel <- data.frame(model = "Pontiac Firebird", mpg = 20.0, cyl = 4)
p <- ggplot(mtcars2, aes(x = reorder(model, mpg), y = mpg, fill = cyl)) +
coord_flip() +
geom_bar(stat = "identity", position = position_dodge()) +
facet_grid(. ~ cyl)
p + geom_text(data = pflabel, label = "Interesting \nFeature")
p + geom_text(data = pflabel, label = "Interesting Feature")
pflabel <- data.frame(model = "Pontiac Firebird", mpg = 12.0, cyl = 4)
p <- ggplot(mtcars2, aes(x = reorder(model, mpg), y = mpg, fill = cyl)) +
coord_flip() +
geom_bar(stat = "identity", position = position_dodge()) +
facet_grid(. ~ cyl)
p + geom_text(data = pflabel, label = "Interesting Feature")
pflabel <- data.frame(model = "Pontiac Firebird", mpg = 15.0, cyl = 4)
p <- ggplot(mtcars2, aes(x = reorder(model, mpg), y = mpg, fill = cyl)) +
coord_flip() +
geom_bar(stat = "identity", position = position_dodge()) +
facet_grid(. ~ cyl)
p + geom_text(data = pflabel, label = "Interesting Feature")
pflabel <- data.frame(model = "Pontiac Firebird", mpg = 17.0, cyl = 4)
p <- ggplot(mtcars2, aes(x = reorder(model, mpg), y = mpg, fill = cyl)) +
coord_flip() +
geom_bar(stat = "identity", position = position_dodge()) +
facet_grid(. ~ cyl)
p + geom_text(data = pflabel, label = "Interesting Feature")
mtcars2 <- data.frame(model = row.names(mtcars), mpg = mtcars$mpg, cyl = mtcars$cyl)
ggplot(mtcars2, aes(x = reorder(model, mpg), y = mpg, fill = cyl)) +
coord_flip() +
facet_grid(. ~ cyl) +
geom_bar(stat = "identity", position = position_dodge())
ggplot(mtcars2, aes(x = reorder(model, mpg), y = mpg, fill = cyl)) +
coord_flip() +
geom_bar(stat = "identity", position = position_dodge()) +
facet_grid(. ~ cyl) +
geom_text(aes(label = "Interesting Feature", x = "Pontiac Firebird", y = 30))
pflabel <- data.frame(model = "Pontiac Firebird", mpg = 17.0, cyl = 4)
p <- ggplot(mtcars2, aes(x = reorder(model, mpg), y = mpg, fill = cyl)) +
coord_flip() +
geom_bar(stat = "identity", position = position_dodge()) +
facet_grid(. ~ cyl)
p + geom_text(data = pflabel, label = "Interesting Feature")
library(ggplot2)
mtcars2 <- data.frame(model = row.names(mtcars), mpg = mtcars$mpg, cyl = mtcars$cyl)
ggplot(mtcars2, aes(x = reorder(model, mpg), y = mpg, fill = cyl)) +
coord_flip() +
facet_grid(. ~ cyl) +
geom_bar(stat = "identity", position = position_dodge())
ggplot(mtcars2, aes(x = reorder(model, mpg), y = mpg, fill = cyl)) +
coord_flip() +
geom_bar(stat = "identity", position = position_dodge()) +
facet_grid(. ~ cyl) +
geom_text(aes(label = "Interesting Feature", x = "Pontiac Firebird", y = 30))
pflabel <- data.frame(model = "Pontiac Firebird", mpg = 17.0, cyl = 4)
p <- ggplot(mtcars2, aes(x = reorder(model, mpg), y = mpg, fill = cyl)) +
coord_flip() +
geom_bar(stat = "identity", position = position_dodge()) +
facet_grid(. ~ cyl)
p + geom_text(data = pflabel, label = "Interesting Feature")
setwd("C:/Users/Molly/Dropbox/website/hanlonmt.github.io/_knitr")
SNP.NAME <- c("SNP-2.26133435.", "SNP-4.19760929.", "SNP-12.11555551.")
CHROMOSOME <- c("2", "4", "12")
POSITION <- c("26139305", "19932894", "11558216")
data <- data.frame(SNP.NAME, CHROMSOME, POSITION)
data <- data.frame(SNP.NAME, CHROMOSOME, POSITION)
data
listMarts
library("biomaRt")
source("http://bioconductor.org/biocLite.R")
biocLite()
library("biomaRt")
rice_mart <- useMart("plants_mart_25", dataset="osativa_eg_gene")
listMarts()
rice_mart <- useMart("plants_mart_26", dataset="osativa_eg_gene")
search.area <- 10000
rice$start <- rice$POSITION - search.area ; rice$end <- rice$POSITION + search.area
rice <- data.frame(SNP.NAME, CHROMOSOME, POSITION)
rice
rice$start <- rice$POSITION - search.area ; rice$end <- rice$POSITION + search.area
CHROMOSOME <- c(2, 4, 12)
POSITION <- c(26139305, 19932894, 11558216)
rice <- data.frame(SNP.NAME, CHROMOSOME, POSITION)
rice
search.area <- 10000
rice$start <- rice$POSITION - search.area ; rice$end <- rice$POSITION + search.area
rice$start <- as.numeric(rice$start); rice$end <- as.numeric(rice$end)
rice_gr <- makeGRangesFromDataFrame(rice,
keep.extra.columns=TRUE,
ignore.strand=TRUE,
seqinfo=NULL,
seqnames.field="CHROMOSOME",
start.field="start",
end.field="end",
starts.in.df.are.0based=FALSE)
library("GenomicRanges")
rice_gr <- makeGRangesFromDataFrame(rice,
keep.extra.columns=TRUE,
ignore.strand=TRUE,
seqinfo=NULL,
seqnames.field="CHROMOSOME",
start.field="start",
end.field="end",
starts.in.df.are.0based=FALSE)
setwd("B:/Users/Molly/Programs/Dropbox/website/hanlonmt.github.io/_knitr")
KnitPost <- function(input, base.url = "/") {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
KnitPost("2015-4-21-SNPgenes.Rmd")
setwd("B:/Users/Molly/Programs/Dropbox/website/hanlonmt.github.io/_knitr")
KnitPost <- function(input, base.url = "/") {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
KnitPost("2015-4-21-SNPgenes.Rmd")
setwd("B:/Users/Molly/Programs/Dropbox/website/hanlonmt.github.io/_knitr")
KnitPost <- function(input, base.url = "/") {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
KnitPost("2015-4-21-SNPgenes.Rmd")
